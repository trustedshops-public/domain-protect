version: 2.1

aliases:
  - &branch-filter
    branches:
      only:
        - dev
        - main

jobs:
  plan:
    working_directory: /tmp/project
    docker:
      - image: hashicorp/terraform:1.0.7
    steps:
      - checkout
      - run:
          name: terraform state bucket variables
          command: |
            echo "export TERRAFORM_STATE_BUCKET=$TERRAFORM_STATE_BUCKET" >> $BASH_ENV
            echo "export TERRAFORM_STATE_KEY=$TERRAFORM_STATE_KEY" >> $BASH_ENV
            echo "export TERRAFORM_STATE_REGION=$TERRAFORM_STATE_REGION" >> $BASH_ENV
      - run:
          name: terraform init
          command: "set -x;terraform init -backend-config=bucket=$TERRAFORM_STATE_BUCKET -backend-config=key=$TERRAFORM_STATE_KEY -backend-config=region=$TERRAFORM_STATE_REGION"
      - run:
          name: set terraform workspace
          command: |
            if [ "$CIRCLE_BRANCH" = "main" ]; then
              terraform workspace select prd || terraform workspace new prd
            else
              terraform workspace select "$CIRCLE_BRANCH" || terraform workspace new "$CIRCLE_BRANCH"
            fi
      - run:
          name: terraform plan
          command: terraform plan -out tfplan
      - persist_to_workspace:
          root: .
          paths:
            - .
  apply:
    docker:
      - image: python:3.8
    steps:
      - attach_workspace:
          at: .
      - run:
          name: install terraform
          command: |
            wget -O /tmp/terraform.zip https://releases.hashicorp.com/terraform/1.0.7/terraform_1.0.7_linux_amd64.zip
            unzip -d /usr/local/bin /tmp/terraform.zip
      - run:
          name: install virtualenv
          command: pip install virtualenv
      - run:
          name: terraform apply
          command: terraform apply -auto-approve tfplan
      - persist_to_workspace:
          root: .
          paths:
            - .

workflows:
  cd:
    jobs:
      - plan:
          filters: *branch-filter
      - approve:
          filters: *branch-filter
          type: approval
          requires:
            - plan
      - apply:
          filters: *branch-filter
          requires:
            - approve